diff --git a/tools/packaging/cpt.py b/tools/packaging/cpt.py
index 2143684f..cd490c59 100755
--- a/tools/packaging/cpt.py
+++ b/tools/packaging/cpt.py
@@ -349,14 +349,14 @@ def fetch_clang(llvm_revision):
        if CLANG_BRANCH:
            exec_subprocess_call('git checkout %s' % CLANG_BRANCH, clangdir)
        else:
-           exec_subprocess_call('git checkout cling-patches-r%s' % llvm_revision, clangdir)
+           exec_subprocess_call('git checkout cling-patches', clangdir)
 
     def get_fresh_clang():
         if CLANG_BRANCH:
             exec_subprocess_call('git clone --depth=10 --branch %s %s'
                                  % (CLANG_BRANCH, CLANG_GIT_URL), dir)
         else:
-            exec_subprocess_call('git clone %s' % CLANG_GIT_URL, dir)
+            exec_subprocess_call('git clone %s %s' % (CLANG_GIT_URL, clangdir), dir)
 
         checkout()
 
@@ -394,7 +394,7 @@ def fetch_cling(arg):
             exec_subprocess_call('git clone --depth=10 --branch %s %s'
                                  % (CLING_BRANCH, CLING_GIT_URL), os.path.join(dir, 'tools'))
         else:
-            exec_subprocess_call('git clone %s' % CLING_GIT_URL, os.path.join(dir, 'tools'))
+            exec_subprocess_call('git clone %s %s' % (CLING_GIT_URL, os.path.join(dir, 'tools', 'cling')), dir)
 
         # if arg == 'last-stable':
         #    checkout_branch = exec_subprocess_check_output('git describe --match v* --abbrev=0 --tags | head -n 1',
@@ -611,8 +611,15 @@ def compile_for_binary(arg):
     else:
         print("Creating build directory: " + LLVM_OBJ_ROOT)
         os.makedirs(LLVM_OBJ_ROOT)
-    
+
     build = Build()
+    llvm_dir = llvm_nix_dir
+    llvm_flags = "-DLLVM_BINARY_DIR={0} -DLLVM_CONFIG={1} -DLLVM_LIBRARY_DIR={2} -DLLVM_MAIN_INCLUDE_DIR={3} -DLLVM_TABLEGEN_EXE={4} \
+      -DLLVM_TOOLS_BINARY_DIR={5} -DLLVM_TOOL_CLING_BUILD=ON".format(os.path.join(llvm_dir, 'bin'), os.path.join(llvm_dir, 'bin', 'llvm-config'),
+      os.path.join(llvm_dir, 'lib'), os.path.join(llvm_dir, 'include'), os.path.join(llvm_dir, 'bin', 'llvm-tblgen'),
+      os.path.join(llvm_dir, 'bin'))
+    print("llvm_flags", llvm_flags)
+
     cmake_config_flags = (clangdir + ' -DCMAKE_BUILD_TYPE={0} -DCMAKE_INSTALL_PREFIX={1} '
                           .format(build.buildType, TMP_PREFIX) + llvm_flags +
                           ' -DLLVM_TARGETS_TO_BUILD=host;NVPTX -DCLING_CXX_HEADERS=ON -DCLING_INCLUDE_TESTS=ON' +
@@ -1886,6 +1893,8 @@ parser.add_argument('--with-clang-url', action='store', help='Specify an alterna
                     default='http://root.cern.ch/git/clang.git')
 parser.add_argument('--with-cling-url', action='store', help='Specify an alternate URL of Cling repo',
                     default='https://github.com/root-project/cling.git')
+parser.add_argument('--with-llvm-dir', action='store', help='Specify the LLVM dir',
+                    default='/nonexistent')
 
 parser.add_argument('--with-binary-llvm', help='Download LLVM binary and use it to build Cling in dev mode', action='store_true')
 parser.add_argument('--with-llvm-tar', help='Download and use LLVM binary release tar to build Cling for debugging', action='store_true')
@@ -1936,10 +1945,9 @@ LLVM_OBJ_ROOT = os.path.join(workdir, 'builddir')
 
 prefix = ''
 tar_required = False
-llvm_revision = urlopen(
-                "https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt").readline().strip().decode(
-                'utf-8')
+llvm_revision = "release_50"
 llvm_vers = "{0}.{1}".format(llvm_revision[-2], llvm_revision[-1])
+llvm_nix_dir = args['with_llvm_dir']
 LLVM_GIT_URL = ""
 CLANG_GIT_URL = args['with_clang_url']
 CLING_GIT_URL = args['with_cling_url']
@@ -2097,7 +2105,7 @@ if args['check_requirements']:
             prerequisite.extend(['subversion'])
             if check_ubuntu('lit') is False:
                 prerequisite.extend(['python-pip'])
-        if args["with_binary_llvm"] and not args["with_llvm_tar"]:        
+        if args["with_binary_llvm"] and not args["with_llvm_tar"]:
             if check_ubuntu('llvm-'+llvm_vers+'-dev') is False:
                 llvm_binary_name = 'llvm-{0}-dev'.format(llvm_vers)
         for pkg in prerequisite:
@@ -2362,18 +2370,12 @@ if args['current_dev']:
         cleanup()
 
 if args['last_stable']:
-    tag = json.loads(urlopen("https://api.github.com/repos/vgvassilev/cling/tags")
-                     .read().decode('utf-8'))[0]['name'].encode('ascii', 'ignore').decode("utf-8")
-
-    # For Python 3 compatibility
-    tag = str(tag)
+    tag = "v0.7"
 
     # FIXME
     assert tag[0] == "v"
     assert CLING_BRANCH == None
-    llvm_revision = urlopen(
-        'https://raw.githubusercontent.com/root-project/cling/%s/LastKnownGoodLLVMSVNRevision.txt' % tag
-    ).readline().strip().decode('utf-8')
+    llvm_revision = "release_50"
 
     args["with_binary_llvm"] = True
 
