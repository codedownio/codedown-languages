name: codedown-languages

on:
  pull_request:
  push:
  workflow_dispatch:

jobs:
  verify-nixpkgs-revs:
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4

    - name: verify-default-nix.sh
      if: "!contains(github.event.head_commit.message, 'noci')"
      run: ./.aliases/verify-default-nix

  test:
    name: ${{matrix.suite.name}} (${{matrix.suite.flags}})
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        suite:
        - name: bash
        - name: clojure
        - name: coq
        - name: cpp
        - name: go
        - name: haskell
          flags: "-f haskell-ghc92"
        - name: haskell
          flags: "-f haskell-ghc94"
        - name: haskell
          flags: "-f haskell-ghc96"
        - name: haskell
          flags: "-f haskell-ghc98"
        - name: julia
        - name: octave
        - name: postgres
        - name: python
        - name: r
        - name: ruby
        - name: rust
        - name: sample-environments
        - name: searchers
        - name: zsh
        - name: spellchecker

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Build tests
      if: "!contains(github.event.head_commit.message, 'noci')"
      run: |
        cd tests

        export NIX_PATH=nixpkgs=$(nix run .#nixpkgsUnstablePath)

        export PATH=$(nix build --no-link .#stack.x86_64-linux --json | jq -r '.[0].outputs.out')/bin:$PATH
        echo "Got path: $PATH"

        stack build --nix --no-nix-pure

    - name: Run tests
      if: "!contains(github.event.head_commit.message, 'noci')"
      run: |
        cd tests

        export TEST_ROOT=$(pwd)/test_root
        echo "Got TEST_ROOT: $TEST_ROOT"
        echo TEST_ROOT="$TEST_ROOT" >> $GITHUB_ENV

        export NIX_PATH=nixpkgs=$(nix run .#nixpkgsUnstablePath)
        export PATH=$(nix build --no-link .#stack.x86_64-linux --json | jq -r '.[0].outputs.out')/bin:$PATH

        stack run --nix --no-nix-pure -- \
          --print-failures \
          --fixed-root "$TEST_ROOT" \
          --markdown-summary "$GITHUB_STEP_SUMMARY" \
          --${{matrix.suite.name}} ${{matrix.suite.flags}}

    - name: Upload test artifacts
      if: ${{ always() }}
      continue-on-error: true
      run: |
        if [[ -n "$TEST_ROOT" ]]; then
          echo "Uploading \"$TEST_ROOT/\""
          rsync \
            -e "ssh -F /secrets/ci_ssh_config" \
            -azW --progress --mkpath \
            "$TEST_ROOT/" \
            tester@desktop1:"/home/tester/all_test_runs/languages_${{github.workflow}}_${{github.run_number}}/${{matrix.suite.name}}-${{matrix.suite.flags}}"
        fi
